/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import Categorias.Categoria;
import Categorias.ListaDoble;
import Imagenes.Imagen;
import Imagenes.ListaCircular;
import Usuarios.ListaSimple;
import Usuarios.Usuario;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Amc
 */
public class Login extends javax.swing.JFrame {

    ListaSimple listaUsuarios = new ListaSimple();
    ListaDoble listaCategorias;
    ListaDoble listaCategoriasAux = new ListaDoble();

    ListaCircular listaImagenes;
    ListaCircular listaImagenesAux = new ListaCircular();

    Usuario usuario;
    Usuario usuarioAux;

    Categoria categoria;
    Categoria categoriaux;

    Imagen imagen;
    Imagen imagenAux;
    Imagen imagenAux2;

    DefaultListModel JL_modeloLista;

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        JP_Registrar.setVisible(false);
        JL_modeloLista = new DefaultListModel();
        JList_Categorias.setModel(JL_modeloLista);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JF_Biblioteca = new javax.swing.JFrame();
        JP_Biblioteca = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        JSP_Categorias = new javax.swing.JScrollPane();
        JList_Categorias = new javax.swing.JList<>();
        JB_AgregarCategoria = new javax.swing.JButton();
        JB_EliminarCategoria = new javax.swing.JButton();
        JC_Seleccionar_Imagen = new javax.swing.JComboBox<>();
        JB_ImagenAnterior = new javax.swing.JButton();
        JB_ImagenSiguiente = new javax.swing.JButton();
        JB_Agregar_Imagen = new javax.swing.JButton();
        JB_Eliminar_Imagen = new javax.swing.JButton();
        JB_Regresar = new javax.swing.JButton();
        JL_NombreDeUsuario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JP_Imagenes = new javax.swing.JPanel();
        JL_ImagenesMostrar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JP_Login = new javax.swing.JPanel();
        JL_Usac = new javax.swing.JLabel();
        JL_Usuario = new javax.swing.JLabel();
        JT_Usuario = new javax.swing.JTextField();
        JB_Ingresar_Biblioteca = new javax.swing.JButton();
        JP_Registrar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        JT_nuevoUsuario = new javax.swing.JTextField();
        JB_Registrar = new javax.swing.JButton();
        JB_NuevoUsuario = new javax.swing.JButton();
        JP_Menu = new javax.swing.JPanel();
        JB_Ingresar_Editor = new javax.swing.JButton();
        JB_Ingresar_Convertidor = new javax.swing.JButton();
        JL_Menu = new javax.swing.JLabel();
        Imagen_Foto = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        JF_Biblioteca.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        JF_Biblioteca.setMinimumSize(new java.awt.Dimension(860, 560));
        JF_Biblioteca.setResizable(false);
        JF_Biblioteca.setSize(new java.awt.Dimension(870, 550));
        JF_Biblioteca.setLocationRelativeTo(null);
        JF_Biblioteca.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                JF_BibliotecaWindowActivated(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                JF_BibliotecaWindowDeactivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                JF_BibliotecaWindowOpened(evt);
            }
        });
        JF_Biblioteca.getContentPane().setLayout(null);

        JP_Biblioteca.setBackground(new java.awt.Color(255, 255, 255));
        JP_Biblioteca.setAlignmentX(0.0F);
        JP_Biblioteca.setAlignmentY(0.0F);
        JP_Biblioteca.setMaximumSize(new java.awt.Dimension(880, 550));
        JP_Biblioteca.setMinimumSize(new java.awt.Dimension(880, 550));
        JP_Biblioteca.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Decker", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Categorias");
        JP_Biblioteca.add(jLabel2);
        jLabel2.setBounds(20, 0, 200, 40);

        JSP_Categorias.setPreferredSize(new java.awt.Dimension(200, 700));

        JList_Categorias.setBackground(new java.awt.Color(255, 255, 255));
        JList_Categorias.setForeground(new java.awt.Color(51, 51, 51));
        JList_Categorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JList_CategoriasMousePressed(evt);
            }
        });
        JList_Categorias.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                JList_CategoriasComponentHidden(evt);
            }
        });
        JList_Categorias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JList_CategoriasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JList_CategoriasKeyTyped(evt);
            }
        });
        JList_Categorias.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JList_CategoriasValueChanged(evt);
            }
        });
        JSP_Categorias.setViewportView(JList_Categorias);

        JP_Biblioteca.add(JSP_Categorias);
        JSP_Categorias.setBounds(20, 40, 200, 400);

        JB_AgregarCategoria.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        JB_AgregarCategoria.setText("Agregar Categoria");
        JB_AgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_AgregarCategoriaActionPerformed(evt);
            }
        });
        JP_Biblioteca.add(JB_AgregarCategoria);
        JB_AgregarCategoria.setBounds(20, 440, 200, 40);

        JB_EliminarCategoria.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        JB_EliminarCategoria.setText("Eliminar Categoria");
        JB_EliminarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_EliminarCategoriaActionPerformed(evt);
            }
        });
        JP_Biblioteca.add(JB_EliminarCategoria);
        JB_EliminarCategoria.setBounds(20, 480, 200, 40);

        JC_Seleccionar_Imagen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Imagenes" }));
        JC_Seleccionar_Imagen.setMaximumSize(new java.awt.Dimension(86, 26));
        JC_Seleccionar_Imagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JC_Seleccionar_ImagenActionPerformed(evt);
            }
        });
        JP_Biblioteca.add(JC_Seleccionar_Imagen);
        JC_Seleccionar_Imagen.setBounds(240, 40, 600, 25);

        JB_ImagenAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Flecha2.png"))); // NOI18N
        JB_ImagenAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_ImagenAnteriorActionPerformed(evt);
            }
        });
        JP_Biblioteca.add(JB_ImagenAnterior);
        JB_ImagenAnterior.setBounds(250, 220, 40, 90);

        JB_ImagenSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Flecha1.png"))); // NOI18N
        JB_ImagenSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_ImagenSiguienteActionPerformed(evt);
            }
        });
        JP_Biblioteca.add(JB_ImagenSiguiente);
        JB_ImagenSiguiente.setBounds(800, 210, 40, 90);

        JB_Agregar_Imagen.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        JB_Agregar_Imagen.setText("Agregar Imagen");
        JB_Agregar_Imagen.setToolTipText("");
        JB_Agregar_Imagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_Agregar_ImagenActionPerformed(evt);
            }
        });
        JP_Biblioteca.add(JB_Agregar_Imagen);
        JB_Agregar_Imagen.setBounds(290, 450, 150, 40);

        JB_Eliminar_Imagen.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        JB_Eliminar_Imagen.setText("Eliminar Imagen");
        JB_Eliminar_Imagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_Eliminar_ImagenActionPerformed(evt);
            }
        });
        JP_Biblioteca.add(JB_Eliminar_Imagen);
        JB_Eliminar_Imagen.setBounds(450, 450, 150, 40);

        JB_Regresar.setFont(new java.awt.Font("Decker", 1, 12)); // NOI18N
        JB_Regresar.setText("Regresar");
        JB_Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_RegresarActionPerformed(evt);
            }
        });
        JP_Biblioteca.add(JB_Regresar);
        JB_Regresar.setBounds(690, 450, 100, 40);

        JL_NombreDeUsuario.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        JL_NombreDeUsuario.setForeground(new java.awt.Color(51, 51, 51));
        JL_NombreDeUsuario.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JL_NombreDeUsuario.setText("Usuario");
        JP_Biblioteca.add(JL_NombreDeUsuario);
        JL_NombreDeUsuario.setBounds(250, 10, 590, 20);

        JP_Imagenes.setBackground(new java.awt.Color(255, 255, 255));
        JP_Imagenes.setForeground(new java.awt.Color(255, 255, 255));
        JP_Imagenes.setLayout(new javax.swing.BoxLayout(JP_Imagenes, javax.swing.BoxLayout.LINE_AXIS));

        JL_ImagenesMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo Biblioteca.png"))); // NOI18N
        JP_Imagenes.add(JL_ImagenesMostrar);

        jScrollPane1.setViewportView(JP_Imagenes);

        JP_Biblioteca.add(jScrollPane1);
        jScrollPane1.setBounds(290, 70, 510, 370);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo Biblioteca.png"))); // NOI18N
        JP_Biblioteca.add(jLabel3);
        jLabel3.setBounds(0, 0, 880, 550);

        JF_Biblioteca.getContentPane().add(JP_Biblioteca);
        JP_Biblioteca.setBounds(0, 0, 870, 550);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(java.awt.Color.white);
        setMaximumSize(new java.awt.Dimension(810, 500));
        setMinimumSize(new java.awt.Dimension(810, 500));
        setName("JFrame1"); // NOI18N
        setPreferredSize(new java.awt.Dimension(800, 500));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        JP_Login.setBackground(new java.awt.Color(51, 51, 51));
        JP_Login.setForeground(new java.awt.Color(227, 228, 232));
        JP_Login.setAlignmentX(0.0F);
        JP_Login.setAlignmentY(0.0F);
        JP_Login.setSize(360,450);
        JP_Login.setMaximumSize(new java.awt.Dimension(360, 450));
        JP_Login.setMinimumSize(new java.awt.Dimension(360, 450));
        JP_Login.setPreferredSize(new java.awt.Dimension(400, 500));
        JP_Login.setLayout(null);

        JL_Usac.setFont(new java.awt.Font("Decker", 1, 36)); // NOI18N
        JL_Usac.setForeground(new java.awt.Color(255, 255, 255));
        JL_Usac.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JL_Usac.setText("USAC LIGHTROOM");
        JP_Login.add(JL_Usac);
        JL_Usac.setBounds(10, 20, 380, 50);

        JL_Usuario.setFont(new java.awt.Font("Decker", 1, 24)); // NOI18N
        JL_Usuario.setForeground(new java.awt.Color(255, 255, 255));
        JL_Usuario.setText("Usuario");
        JP_Login.add(JL_Usuario);
        JL_Usuario.setBounds(20, 140, 90, 20);

        JT_Usuario.setBackground(new java.awt.Color(255, 255, 255));
        JT_Usuario.setForeground(new java.awt.Color(69, 73, 74));
        JT_Usuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(38, 137, 198), 2));
        JT_Usuario.setCaretColor(new java.awt.Color(0, 0, 0));
        JT_Usuario.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        JT_Usuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JT_UsuarioMouseClicked(evt);
            }
        });
        JT_Usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JT_UsuarioActionPerformed(evt);
            }
        });
        JP_Login.add(JT_Usuario);
        JT_Usuario.setBounds(110, 130, 250, 30);

        JB_Ingresar_Biblioteca.setBackground(new java.awt.Color(255, 255, 255));
        JB_Ingresar_Biblioteca.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        JB_Ingresar_Biblioteca.setForeground(new java.awt.Color(0, 0, 0));
        JB_Ingresar_Biblioteca.setText("Ingresar a Biblioteca");
        JB_Ingresar_Biblioteca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JB_Ingresar_BibliotecaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JB_Ingresar_BibliotecaMouseExited(evt);
            }
        });
        JB_Ingresar_Biblioteca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_Ingresar_BibliotecaActionPerformed(evt);
            }
        });
        JP_Login.add(JB_Ingresar_Biblioteca);
        JB_Ingresar_Biblioteca.setBounds(140, 190, 180, 50);

        JP_Registrar.setBackground(new java.awt.Color(255, 255, 255));
        JP_Registrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(38, 137, 198)));
        JP_Registrar.setAlignmentX(0.0F);
        JP_Registrar.setMaximumSize(new java.awt.Dimension(303, 120));
        JP_Registrar.setMinimumSize(new java.awt.Dimension(303, 120));
        JP_Registrar.setPreferredSize(new java.awt.Dimension(342, 120));
        JP_Registrar.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Ingresa tu nombre de usuario");
        JP_Registrar.add(jLabel1);
        jLabel1.setBounds(10, 10, 220, 18);

        JT_nuevoUsuario.setBackground(new java.awt.Color(255, 255, 255));
        JT_nuevoUsuario.setForeground(new java.awt.Color(0, 0, 0));
        JT_nuevoUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(38, 137, 198)));
        JP_Registrar.add(JT_nuevoUsuario);
        JT_nuevoUsuario.setBounds(10, 80, 190, 30);

        JB_Registrar.setBackground(new java.awt.Color(0, 0, 0));
        JB_Registrar.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        JB_Registrar.setForeground(new java.awt.Color(255, 255, 255));
        JB_Registrar.setText("Registrar");
        JB_Registrar.setPreferredSize(new java.awt.Dimension(132, 34));
        JB_Registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JB_RegistrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JB_RegistrarMouseExited(evt);
            }
        });
        JB_Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_RegistrarActionPerformed(evt);
            }
        });
        JB_Registrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JB_RegistrarKeyTyped(evt);
            }
        });
        JP_Registrar.add(JB_Registrar);
        JB_Registrar.setBounds(210, 80, 132, 40);

        JP_Login.add(JP_Registrar);
        JP_Registrar.setBounds(20, 250, 360, 130);

        JB_NuevoUsuario.setBackground(new java.awt.Color(255, 255, 255));
        JB_NuevoUsuario.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        JB_NuevoUsuario.setForeground(new java.awt.Color(0, 0, 0));
        JB_NuevoUsuario.setText("Nuevo Usuario");
        JB_NuevoUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JB_NuevoUsuarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JB_NuevoUsuarioMouseExited(evt);
            }
        });
        JB_NuevoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_NuevoUsuarioActionPerformed(evt);
            }
        });
        JP_Login.add(JB_NuevoUsuario);
        JB_NuevoUsuario.setBounds(30, 400, 150, 50);

        getContentPane().add(JP_Login);
        JP_Login.setBounds(0, 0, 400, 500);

        JP_Menu.setBackground(new java.awt.Color(255, 255, 255));
        JP_Menu.setAlignmentX(0.0F);
        JP_Menu.setAlignmentY(0.0F);
        JP_Menu.setMaximumSize(new java.awt.Dimension(410, 500));
        JP_Menu.setMinimumSize(new java.awt.Dimension(410, 500));
        JP_Menu.setPreferredSize(new java.awt.Dimension(400, 500));
        JP_Menu.setLayout(null);

        JB_Ingresar_Editor.setBackground(new java.awt.Color(0, 0, 0));
        JB_Ingresar_Editor.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        JB_Ingresar_Editor.setForeground(new java.awt.Color(255, 255, 255));
        JB_Ingresar_Editor.setText("Ingresar a Editor");
        JB_Ingresar_Editor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JB_Ingresar_EditorMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JB_Ingresar_EditorMouseExited(evt);
            }
        });
        JB_Ingresar_Editor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_Ingresar_EditorActionPerformed(evt);
            }
        });
        JP_Menu.add(JB_Ingresar_Editor);
        JB_Ingresar_Editor.setBounds(10, 400, 160, 50);

        JB_Ingresar_Convertidor.setBackground(new java.awt.Color(0, 0, 0));
        JB_Ingresar_Convertidor.setFont(new java.awt.Font("Decker", 1, 14)); // NOI18N
        JB_Ingresar_Convertidor.setForeground(new java.awt.Color(255, 255, 255));
        JB_Ingresar_Convertidor.setText("Ingresar a Convertidor");
        JB_Ingresar_Convertidor.setAlignmentY(0.0F);
        JB_Ingresar_Convertidor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JB_Ingresar_ConvertidorMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JB_Ingresar_ConvertidorMouseExited(evt);
            }
        });
        JB_Ingresar_Convertidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_Ingresar_ConvertidorActionPerformed(evt);
            }
        });
        JP_Menu.add(JB_Ingresar_Convertidor);
        JB_Ingresar_Convertidor.setBounds(180, 400, 200, 50);

        JL_Menu.setBackground(new java.awt.Color(0, 0, 0));
        JL_Menu.setFont(new java.awt.Font("Decker", 0, 48)); // NOI18N
        JL_Menu.setForeground(new java.awt.Color(38, 137, 198));
        JL_Menu.setText("Menú");
        JP_Menu.add(JL_Menu);
        JL_Menu.setBounds(140, 20, 123, 59);

        Imagen_Foto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logo.png"))); // NOI18N
        Imagen_Foto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Imagen_FotoMouseClicked(evt);
            }
        });
        JP_Menu.add(Imagen_Foto);
        Imagen_Foto.setBounds(90, 110, 230, 250);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo Biblioteca.png"))); // NOI18N
        JP_Menu.add(jLabel4);
        jLabel4.setBounds(0, 0, 410, 500);

        getContentPane().add(JP_Menu);
        JP_Menu.setBounds(400, 0, 410, 500);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void JT_UsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JT_UsuarioMouseClicked

    }//GEN-LAST:event_JT_UsuarioMouseClicked

    private void JT_UsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JT_UsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JT_UsuarioActionPerformed

    private void JB_Ingresar_BibliotecaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_Ingresar_BibliotecaMouseEntered
        JB_Ingresar_Biblioteca.setBackground(new Color(38, 137, 198));
        JB_Ingresar_Biblioteca.setForeground(Color.white);
    }//GEN-LAST:event_JB_Ingresar_BibliotecaMouseEntered

    private void JB_Ingresar_BibliotecaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_Ingresar_BibliotecaMouseExited
        JB_Ingresar_Biblioteca.setBackground(Color.white);
        JB_Ingresar_Biblioteca.setForeground(Color.black);
    }//GEN-LAST:event_JB_Ingresar_BibliotecaMouseExited

    private void JB_Ingresar_BibliotecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_Ingresar_BibliotecaActionPerformed
        listaCategorias = new ListaDoble();
        if ((boolean) listaUsuarios.find(JT_Usuario.getText()) == true) {
            usuario = (Usuario) listaUsuarios.get(listaUsuarios.DevolverNumeroNodo(JT_Usuario.getText()));
            if (usuario.getListaCategorias() == null) {
                listaCategorias.add(new Categoria("General"));
                usuario.setListaCategorias(listaCategorias);
                listaCategorias = usuario.getListaCategorias();
            } else {
                listaCategorias = usuario.getListaCategorias();
            }
            this.setVisible(false);
            JF_Biblioteca.setVisible(true);
            JL_NombreDeUsuario.setText(usuario.getNombre());
            JlistAgregar(listaCategorias);
        } else {
            JOptionPane.showMessageDialog(null, "Usuario no existente");
        }
    }//GEN-LAST:event_JB_Ingresar_BibliotecaActionPerformed

    private void JB_RegistrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_RegistrarMouseEntered
        JB_Registrar.setBackground(new Color(38, 137, 198));
        JB_Registrar.setForeground(Color.white);
    }//GEN-LAST:event_JB_RegistrarMouseEntered

    private void JB_RegistrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_RegistrarMouseExited
        JB_Registrar.setBackground(Color.black);
        JB_Registrar.setForeground(Color.white);
    }//GEN-LAST:event_JB_RegistrarMouseExited

    private void JB_RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_RegistrarActionPerformed
        String nombreNuevoU = JT_nuevoUsuario.getText();
        if ((boolean) listaUsuarios.find(nombreNuevoU) == true) {
            JOptionPane.showMessageDialog(null, "Ese nombre se encuentra en uso, ingrese un nuevo nombre");
            JT_nuevoUsuario.setText("");
        } else {
            usuario = new Usuario(nombreNuevoU);
            listaUsuarios.add(usuario);
            JT_nuevoUsuario.setText("");
            JOptionPane.showMessageDialog(null, "Nuevo usuario creado");
            JP_Registrar.setVisible(false);
            listaCategorias = new ListaDoble();
            if (usuario.getListaCategorias() == null) {
                listaCategorias.add(new Categoria("General"));
                usuario.setListaCategorias(listaCategorias);
                listaCategorias = usuario.getListaCategorias();
            } else {
                listaCategorias = usuario.getListaCategorias();
            }
        }
        Serializar();
    }//GEN-LAST:event_JB_RegistrarActionPerformed

    private void JB_RegistrarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JB_RegistrarKeyTyped

    }//GEN-LAST:event_JB_RegistrarKeyTyped

    private void JB_NuevoUsuarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_NuevoUsuarioMouseEntered
        JB_NuevoUsuario.setBackground(new Color(38, 137, 198));
        JB_NuevoUsuario.setForeground(Color.white);
    }//GEN-LAST:event_JB_NuevoUsuarioMouseEntered

    private void JB_NuevoUsuarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_NuevoUsuarioMouseExited
        JB_NuevoUsuario.setBackground(Color.white);
        JB_NuevoUsuario.setForeground(Color.black);
    }//GEN-LAST:event_JB_NuevoUsuarioMouseExited

    private void JB_NuevoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_NuevoUsuarioActionPerformed
        JP_Registrar.setVisible(true);
        JT_nuevoUsuario.requestFocus();
    }//GEN-LAST:event_JB_NuevoUsuarioActionPerformed

    private void Imagen_FotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Imagen_FotoMouseClicked

    }//GEN-LAST:event_Imagen_FotoMouseClicked

    private void JB_Ingresar_EditorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_Ingresar_EditorMouseEntered
        JB_Ingresar_Editor.setBackground(new Color(38, 137, 198));
        JB_Ingresar_Editor.setForeground(Color.white);
    }//GEN-LAST:event_JB_Ingresar_EditorMouseEntered

    private void JB_Ingresar_EditorMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_Ingresar_EditorMouseExited
        JB_Ingresar_Editor.setBackground(Color.black);
        JB_Ingresar_Editor.setForeground(Color.white);
    }//GEN-LAST:event_JB_Ingresar_EditorMouseExited

    private void JB_Ingresar_EditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_Ingresar_EditorActionPerformed
        Editor editor = new Editor();
        editor.setVisible(true);
    }//GEN-LAST:event_JB_Ingresar_EditorActionPerformed

    private void JB_Ingresar_ConvertidorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_Ingresar_ConvertidorMouseEntered
        JB_Ingresar_Convertidor.setBackground(new Color(38, 137, 198));
        JB_Ingresar_Convertidor.setForeground(Color.white);
    }//GEN-LAST:event_JB_Ingresar_ConvertidorMouseEntered

    private void JB_Ingresar_ConvertidorMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_Ingresar_ConvertidorMouseExited
        JB_Ingresar_Convertidor.setBackground(Color.black);
        JB_Ingresar_Convertidor.setForeground(Color.white);
    }//GEN-LAST:event_JB_Ingresar_ConvertidorMouseExited

    private void JB_Ingresar_ConvertidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_Ingresar_ConvertidorActionPerformed
        Convertidor convertir = new Convertidor();
        convertir.setVisible(true);
    }//GEN-LAST:event_JB_Ingresar_ConvertidorActionPerformed

    private void JList_CategoriasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JList_CategoriasMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JList_CategoriasMousePressed

    private void JList_CategoriasComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_JList_CategoriasComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_JList_CategoriasComponentHidden

    private void JList_CategoriasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JList_CategoriasKeyPressed

    }//GEN-LAST:event_JList_CategoriasKeyPressed

    private void JList_CategoriasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JList_CategoriasKeyTyped

    }//GEN-LAST:event_JList_CategoriasKeyTyped

    private void JList_CategoriasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JList_CategoriasValueChanged
        listaImagenes = new ListaCircular();
        int numeroCategoria = JList_Categorias.getSelectedIndex();
        categoriaux = (Categoria) listaCategorias.get(numeroCategoria);

        if (categoriaux.getListaImagenes() == null) {
            JC_Seleccionar_Imagen.removeAllItems();
        } else {
            listaImagenes = categoriaux.getListaImagenes();
            imagenAux = (Imagen) listaImagenes.get(0);
        }

        JC_Seleccionar_Imagen.removeAllItems();
        JComboLlenar(listaImagenes);
    }//GEN-LAST:event_JList_CategoriasValueChanged

    private void JB_AgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_AgregarCategoriaActionPerformed
        String nombreCategoria = JOptionPane.showInputDialog("Ingrese un nombre para la categoria");
        if (nombreCategoria.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un nombre", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if ((boolean) listaCategorias.find(nombreCategoria) == true) {
                JOptionPane.showMessageDialog(null, "Ese nombre se encuentra en uso, ingrese un nuevo nombre");
            } else {
                categoria = new Categoria(nombreCategoria);
                JL_modeloLista.addElement(categoria.getNombreCategoria());
                listaCategorias.add(categoria);
                JL_modeloLista.clear();
                JlistAgregar(listaCategorias);
            }
        }
    }//GEN-LAST:event_JB_AgregarCategoriaActionPerformed

    private void JB_EliminarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_EliminarCategoriaActionPerformed
        int numeroLista = JList_Categorias.getSelectedIndex();
        if (numeroLista >= 0) {
            int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está segur@ de eliminar el elemento  " + "'' " + categoriaux.getNombreCategoria() + " ''");
            if (confirmacion == 0) {
                JL_modeloLista.remove(numeroLista);
                listaCategorias.delete((Categoria) listaCategorias.get(numeroLista));
                JL_modeloLista.clear();
                JlistAgregar(listaCategorias);
            } else {

            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una categoria",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_JB_EliminarCategoriaActionPerformed

    private void JC_Seleccionar_ImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JC_Seleccionar_ImagenActionPerformed
        if (categoriaux.getListaImagenes() != null) {
            Imagen imagenAux = (Imagen) listaImagenes.get(JC_Seleccionar_Imagen.getSelectedIndex());
            JL_ImagenesMostrar.setIcon(new javax.swing.ImageIcon(imagenAux.getFile().getAbsolutePath()));
        } else {
            JL_ImagenesMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo Biblioteca.png")));

        }
    }//GEN-LAST:event_JC_Seleccionar_ImagenActionPerformed

    private void JB_ImagenAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_ImagenAnteriorActionPerformed
        try {
            if (listaImagenes == null) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una categoria");
            } else if (listaImagenes.getSize() == 0) {
                JOptionPane.showMessageDialog(null, "No hay imagenes en esta categoria");
            } else {
                imagenAux = listaImagenes.getPrevious(imagenAux);
                JL_ImagenesMostrar.setIcon(new javax.swing.ImageIcon(imagenAux.getFile().getAbsolutePath()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una categoria");
        }
    }//GEN-LAST:event_JB_ImagenAnteriorActionPerformed

    private void JB_ImagenSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_ImagenSiguienteActionPerformed
        try {
            if (listaImagenes == null) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una categoria");
            } else if (listaImagenes.getSize() == 0) {
                JOptionPane.showMessageDialog(null, "No hay imagenes en esta categoria");
            } else {
                imagenAux = listaImagenes.getNext(imagenAux);
                JL_ImagenesMostrar.setIcon(new javax.swing.ImageIcon(imagenAux.getFile().getAbsolutePath()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una categoria");
        }
    }//GEN-LAST:event_JB_ImagenSiguienteActionPerformed

    private void JB_Agregar_ImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_Agregar_ImagenActionPerformed
        JFileChooser fileC = new JFileChooser();
        fileC.setDialogTitle("Obtener imagen");

        listaImagenes = new ListaCircular();
        int numeroCategoria = JList_Categorias.getSelectedIndex();
        categoriaux = (Categoria) listaCategorias.get(numeroCategoria);

        if (categoriaux.getListaImagenes() == null) {

            if (fileC.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = fileC.getSelectedFile().getAbsoluteFile();

                String nombreImagen = JOptionPane.showInputDialog("Ingrese un nombre para la imagen");
                if (nombreImagen.equals("")) {
                    JOptionPane.showMessageDialog(null, "Debe ingresar un nombre", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    imagen = new Imagen(nombreImagen, new File(file.getAbsolutePath()));
                    listaImagenes.add(imagen);
                    categoriaux.setListaImagenes(listaImagenes);
                    listaImagenes = categoriaux.getListaImagenes();
                    JL_ImagenesMostrar.setIcon(new javax.swing.ImageIcon(file.getAbsolutePath()));
                }
            }

        } else {
            listaImagenes = categoriaux.getListaImagenes();

            if (fileC.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = fileC.getSelectedFile().getAbsoluteFile();

                String nombreImagen = JOptionPane.showInputDialog("Ingrese un nombre para la imagen");
                if ((boolean) listaImagenes.find(nombreImagen) == true) {
                    JOptionPane.showMessageDialog(null, "Ese nombre se encuentra en uso, ingrese un nuevo nombre");
                } else {
                    imagen = new Imagen(nombreImagen, new File(file.getAbsolutePath()));
                    listaImagenes.add(imagen);
                    JL_ImagenesMostrar.setIcon(new javax.swing.ImageIcon(file.getAbsolutePath()));

                }
            }
        }

        categoriaux.setListaImagenes(listaImagenes);
        listaCategorias.modificarNodo(categoriaux);
        JC_Seleccionar_Imagen.removeAllItems();
        JComboLlenar(listaImagenes);
    }//GEN-LAST:event_JB_Agregar_ImagenActionPerformed

    private void JB_Eliminar_ImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_Eliminar_ImagenActionPerformed
        int numeroLista = JC_Seleccionar_Imagen.getSelectedIndex();
        listaImagenesAux = listaImagenes;
        imagenAux2 = (Imagen) listaImagenes.get(numeroLista);
        if (numeroLista >= 0) {
            int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está segur@ de eliminar el elemento  " + "'' " + imagenAux2.getNombre() + " ''");

            if (confirmacion == 0) {
                listaImagenes.delete((Imagen) listaImagenes.get(numeroLista));
                JC_Seleccionar_Imagen.removeAllItems();
                JComboLlenar(listaImagenes);
                categoriaux.setListaImagenes(listaImagenes);
                if (categoriaux.getListaImagenes().getSize() == 0) {
                    JL_ImagenesMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo Biblioteca.png")));
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una categoria",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_JB_Eliminar_ImagenActionPerformed

    private void JB_RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_RegresarActionPerformed
        usuario.setListaCategorias(listaCategorias);
        listaUsuarios.modificarNodo(usuario);
        JL_modeloLista.clear();
        JF_Biblioteca.setVisible(false);
        JF_Biblioteca.dispose();
        this.JT_Usuario.setText("");
        this.setVisible(true);
        JL_ImagenesMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo Biblioteca.png")));
    }//GEN-LAST:event_JB_RegresarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ObtenerSerializable();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Serializar();
    }//GEN-LAST:event_formWindowClosing

    private void JF_BibliotecaWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_JF_BibliotecaWindowActivated
        this.repaint();
    }//GEN-LAST:event_JF_BibliotecaWindowActivated

    private void JF_BibliotecaWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_JF_BibliotecaWindowDeactivated
        Serializar();
    }//GEN-LAST:event_JF_BibliotecaWindowDeactivated

    private void JF_BibliotecaWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_JF_BibliotecaWindowOpened
        JL_NombreDeUsuario.setText(usuario.getNombre());
    }//GEN-LAST:event_JF_BibliotecaWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Imagen_Foto;
    private javax.swing.JButton JB_AgregarCategoria;
    private javax.swing.JButton JB_Agregar_Imagen;
    private javax.swing.JButton JB_EliminarCategoria;
    private javax.swing.JButton JB_Eliminar_Imagen;
    private javax.swing.JButton JB_ImagenAnterior;
    private javax.swing.JButton JB_ImagenSiguiente;
    private javax.swing.JButton JB_Ingresar_Biblioteca;
    private javax.swing.JButton JB_Ingresar_Convertidor;
    private javax.swing.JButton JB_Ingresar_Editor;
    private javax.swing.JButton JB_NuevoUsuario;
    private javax.swing.JButton JB_Registrar;
    private javax.swing.JButton JB_Regresar;
    private javax.swing.JComboBox<String> JC_Seleccionar_Imagen;
    private javax.swing.JFrame JF_Biblioteca;
    private javax.swing.JLabel JL_ImagenesMostrar;
    private javax.swing.JLabel JL_Menu;
    private javax.swing.JLabel JL_NombreDeUsuario;
    private javax.swing.JLabel JL_Usac;
    private javax.swing.JLabel JL_Usuario;
    private javax.swing.JList<String> JList_Categorias;
    private javax.swing.JPanel JP_Biblioteca;
    private javax.swing.JPanel JP_Imagenes;
    private javax.swing.JPanel JP_Login;
    private javax.swing.JPanel JP_Menu;
    private javax.swing.JPanel JP_Registrar;
    private javax.swing.JScrollPane JSP_Categorias;
    private javax.swing.JTextField JT_Usuario;
    private javax.swing.JTextField JT_nuevoUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void ObtenerSerializable() {
        try {
            FileInputStream di = new FileInputStream("datos.txt"); // dist\\datos.txt
            ObjectInputStream lis = new ObjectInputStream(di);
            listaUsuarios = (ListaSimple) lis.readObject();
            lis.close();
            di.close();
        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void Serializar() {
        try {
            FileOutputStream fi = new FileOutputStream("datos.txt"); // dist\\datos.txt
            ObjectOutputStream lis = new ObjectOutputStream(fi);
            lis.writeObject(listaUsuarios);
            fi.close();
            lis.close();
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }

    public void JlistAgregar(ListaDoble listaCategorias) {
        int max = listaCategorias.getSize();
        for (int i = 0; i < max; i++) {
            Categoria cat = (Categoria) listaCategorias.get(i);
            JL_modeloLista.addElement(cat.getNombreCategoria());
        }
    }

    public void JComboLlenar(ListaCircular listaImagenes) {
        int max = listaImagenes.getSize();
        for (int i = 0; i < max; i++) {
            Imagen imagen = (Imagen) listaImagenes.get(i);
            JC_Seleccionar_Imagen.addItem(imagen.getNombre());
        }
    }

}
